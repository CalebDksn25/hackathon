// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../core/resource.mjs";
import * as TaskGroupAPI from "./task-group.mjs";
import * as TaskRunAPI from "./task-run.mjs";
import { TaskRun, } from "./task-run.mjs";
import { buildHeaders } from "../../internal/headers.mjs";
export class Beta extends APIResource {
    constructor() {
        super(...arguments);
        this.taskRun = new TaskRunAPI.TaskRun(this._client);
        this.taskGroup = new TaskGroupAPI.TaskGroup(this._client);
    }
    /**
     * Extracts relevant content from specific web URLs.
     *
     * To access this endpoint, pass the `parallel-beta` header with the value
     * `search-extract-2025-10-10`.
     */
    extract(params, options) {
        const { betas, ...body } = params;
        return this._client.post('/v1beta/extract', {
            body,
            ...options,
            headers: buildHeaders([
                { 'parallel-beta': [...(betas ?? []), 'search-extract-2025-10-10'].toString() },
                options?.headers,
            ]),
        });
    }
    /**
     * Searches the web.
     */
    search(params, options) {
        const { betas, ...body } = params;
        return this._client.post('/v1beta/search', {
            body,
            ...options,
            headers: buildHeaders([
                { 'parallel-beta': [...(betas ?? []), 'search-extract-2025-10-10'].toString() },
                options?.headers,
            ]),
        });
    }
}
Beta.TaskRun = TaskRun;
//# sourceMappingURL=beta.mjs.map