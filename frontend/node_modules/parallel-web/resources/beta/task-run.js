"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaskRun = void 0;
const resource_1 = require("../../core/resource.js");
const headers_1 = require("../../internal/headers.js");
const path_1 = require("../../internal/utils/path.js");
class TaskRun extends resource_1.APIResource {
    /**
     * Initiates a task run.
     *
     * Returns immediately with a run object in status 'queued'.
     *
     * Beta features can be enabled by setting the 'parallel-beta' header.
     */
    create(params, options) {
        const { betas, ...body } = params;
        return this._client.post('/v1/tasks/runs?beta=true', {
            body,
            ...options,
            headers: (0, headers_1.buildHeaders)([
                { 'parallel-beta': [...(betas ?? []), 'search-extract-2025-10-10'].toString() },
                options?.headers,
            ]),
        });
    }
    /**
     * Streams events for a task run.
     *
     * Returns a stream of events showing progress updates and state changes for the
     * task run.
     *
     * For task runs that did not have enable_events set to true during creation, the
     * frequency of events will be reduced.
     */
    events(runID, options) {
        return this._client.get((0, path_1.path) `/v1beta/tasks/runs/${runID}/events`, {
            ...options,
            headers: (0, headers_1.buildHeaders)([
                { 'parallel-beta': 'search-extract-2025-10-10', Accept: 'text/event-stream' },
                options?.headers,
            ]),
            stream: true,
        });
    }
    /**
     * Retrieves a run result by run_id, blocking until the run is completed.
     */
    result(runID, params = {}, options) {
        const { betas, ...query } = params ?? {};
        return this._client.get((0, path_1.path) `/v1/tasks/runs/${runID}/result?beta=true`, {
            query,
            ...options,
            headers: (0, headers_1.buildHeaders)([
                { 'parallel-beta': [...(betas ?? []), 'search-extract-2025-10-10'].toString() },
                options?.headers,
            ]),
        });
    }
}
exports.TaskRun = TaskRun;
//# sourceMappingURL=task-run.js.map